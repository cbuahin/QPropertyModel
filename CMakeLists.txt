#
# CMakeLists.txt - CMake configuration for QPropertyModel
#
# Author: Caleb Buahin
#
# This file is part of the QPropertyModel library.
# License. For details see the LICENSE file.
# 
# Copyright: 2024


cmake_minimum_required(VERSION 3.5)

project(
    QPropertyModel 
    VERSION 0.1 
    LANGUAGES C CXX
    HOMEPAGE_URL "https://github.com/cbuahin/QPropertyModel"
    DESCRIPTION "A property browser model designed after .NET PropertyGrid"
)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_AUTOUIC_SEARCH_PATHS forms)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets OpenGL OpenGLWidgets LinguistTools)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets OpenGL OpenGLWidgets LinguistTools)

set(TS_FILES translation/QPropertyModel_en_US.ts)


# The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
# generated by CMake. This variable contains the .icns file name,
# without the path.
# set(MACOSX_BUNDLE_ICON_FILE QPropertyModelTesting.icns)
# And the following tells CMake where to find and install the file itself.
# set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/resources/QPropertyModelTesting.icns")
# set_source_files_properties(${app_icon_macos} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")

## And the same for Windows
# set(app_icon_resource_windows "${CMAKE_CURRENT_SOURCE_DIR}/resources/qpropertymodel.rc")


set(
    PROJECT_SOURCES
        # Source files
        src/stdafx.cpp
        src/qbasepropertyitemeditor.cpp
        src/qboolpropertyitem.cpp
        src/qbrushpropertyitem.cpp
        src/qchildboolpropertyitem.cpp
        src/qchildbrushpropertyitem.cpp
        src/qchildenumpropertyitem.cpp
        src/qchildiconpropertyitem.cpp
        src/qchildimagepropertyitem.cpp
        src/qchildpointfpropertyitem.cpp
        src/qchildpointpropertyitem.cpp
        src/qcolorpropertyitemeditor.cpp
        src/qcustomeditors.cpp
        src/qenumpropertyitem.cpp
        src/qflagspropertyitem.cpp
        src/qfontfamilypropertyitem.cpp
        src/qfontpropertyitem.cpp
        src/qfontpropertyitemeditor.cpp
        src/qiconpropertyitem.cpp
        src/qimagepropertyitem.cpp
        src/qimagepropertyitemeditor.cpp
        src/qlinefpropertyitem.cpp
        src/qlinepropertyitem.cpp
        src/qobjectclasspropertyitem.cpp
        src/qobjectlistpropertyitem.cpp
        src/qobjectlistpropertyitemeditor.cpp
        src/qobjectpropertyitem.cpp
        src/qpenpropertyitem.cpp
        src/qpointfpropertyitem.cpp
        src/qpointpropertyitem.cpp
        src/qpopuppropertyitemeditor.cpp
        src/qpropertyitem.cpp
        src/qpropertyitemdelegate.cpp
        src/qpropertymodel.cpp
        src/qrectfpropertyitem.cpp
        src/qrectpropertyitem.cpp
        src/qselectfromlistpropertyitemeditor.cpp
        src/qsizefpropertyitem.cpp
        src/qsizepropertyitem.cpp
        src/qstringlistpropertyitem.cpp
        src/qstringlistpropertyitemeditor.cpp
        src/qvariantholderhelper.cpp
        src/qvariantlistpropertyItem.cpp
        src/qvariantlistpropertyitemeditor.cpp
        src/qvariantpropertyitem.cpp
        src/qvector2dpropertyitem.cpp
        src/qvector3dpropertyitem.cpp
        src/qvector4dpropertyitem.cpp
        src/stdafx.cpp

        # Header files
        include/stdafx.h
        include/qboolpropertyitem.h
        include/qbrushpropertyitem.h
        include/qchildpropertyitems.h
        include/qcustomeditors.h
        include/qenumpropertyitem.h
        include/qflagspropertyitem.h
        include/qfontfamilypropertyitem.h
        include/qfontpropertyitem.h
        include/qiconpropertyitem.h
        include/qimagepropertyitem.h
        include/qlinefpropertyitem.h
        include/qlinepropertyitem.h
        include/qobjectclasspropertyitem.h
        include/qobjectlistpropertyitem.h
        include/qobjectpropertyitem.h
        include/qpenpropertyitem.h
        include/qpointfpropertyitem.h
        include/qpointpropertyitem.h
        include/qpropertyitem.h
        include/qpropertyitemdelegate.h
        include/qpropertymodel.h
        include/qpropertymodel_global.h
        include/qrectfpropertyitem.h
        include/qrectpropertyitem.h
        include/qsizefpropertyitem.h
        include/qsizepropertyitem.h
        include/qstringlistpropertyitem.h
        include/qvariantholderhelper.h
        include/qvariantlistpropertyitem.h
        include/qvariantpropertyItem.h
        include/qvector2dpropertyitem.h
        include/qvector3dpropertyitem.h
        include/qvector4dpropertyitem.h

        # Form files
        forms/qcustomobjectlistpropertyitemeditor.ui

        # Translation files
        ${TS_FILES}

        # Resource files
        # ${app_icon_macos}
        # ${app_icon_resource_windows}
)

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_library(QPropertyModel
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
        resources/qpropertymodel.qrc
    )
# Define target properties for Android with Qt 6 as:
#    set_property(TARGET SWMMVis APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
#                 ${CMAKE_CURRENT_SOURCE_DIR}/android)
# For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation

qt_create_translation(QM_FILES ${CMAKE_SOURCE_DIR} ${TS_FILES})

else()
    if(ANDROID)
        add_library(QPropertyModel SHARED
            ${PROJECT_SOURCES}
        )
# Define properties for Android with Qt 5 after find_package() calls as:
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
    else()
        add_library(QPropertyModel
            ${PROJECT_SOURCES}
        )
    endif()

    qt5_create_translation(QM_FILES ${CMAKE_SOURCE_DIR} ${TS_FILES})
endif()

target_include_directories(
    QPropertyModel 
        PRIVATE include
        PRIVATE forms
)

target_link_libraries(
    QPropertyModel
        PRIVATE
        Qt${QT_VERSION_MAJOR}::Widgets
        Qt${QT_VERSION_MAJOR}::OpenGL
        Qt${QT_VERSION_MAJOR}::OpenGLWidgets
        )

set_target_properties(QPropertyModel PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER cbuahin.qpropertymodel.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

install(TARGETS QPropertyModel
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(QPropertyModel)
endif()

# Create install rules for vcruntime.dll, msvcp.dll, vcomp.dll etc.
include(InstallRequiredSystemLibraries)


# Configure CPack driven installer package
set(CPACK_GENERATOR "ZIP")
set(CPACK_PACKAGE_VENDOR "cbuahin")
set(CPACK_ARCHIVE_FILE_NAME "QPropertyModel")

include(CPack)
